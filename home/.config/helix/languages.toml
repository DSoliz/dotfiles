[language-server.marksman]
command = "marksman"
args = ["--stdio"]

[[language]]
name = "markdown"
language-servers = [
  "marksman",
  # "cspell"
]

# [language-server.cspell]
# command = "cspell-lsp"
# args = ["--stdio"]

[language-server.emmet-ls]
command = "emmet-ls"
args = ["--stdio"]

[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]
config.hostInfo = "helix"

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
format = true # opt
nodePath = "" # required
onIgnoredFiles = "off"
# packageManager = "pnpm" # opt
# quiet = false # opt
rulesCustomizations = [] # required
# run = "onType" # "onType" required
# run = "onSave" # "onType" required
# useESLintClass = false
validate = "on" # required
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } } # required for code actions
# codeActionOnSave = { enable = true, mode = "all" }
experimental = { } # required
problems = { shortenToSingleLine = false } # required
# workingDirectory = { mode = "location" }
# workingDirectories = [{ directory = "front", changeProcessCWD = true }, { directory = "server", changeProcessCWD = true }]

[[language]]
name = "typescript"
auto-format = true
formatter = { command = './node_modules/prettier/bin/prettier.cjs', args = ["--parser", "typescript"] }
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  "eslint"
]
roots = [
  "pnpm-lock.yaml"
  # "package-lock.json",
  # "package.json",
]

[[language]]
name = "tsx"
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  "eslint"
]
roots = [
  "pnpm-lock.yaml"
  # "package-lock.json",
  # "package.json",
]

[[language]]
name = "javascript"
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  "eslint"
]
roots = [
  # "package-lock.json",
  "package.json",
]

